const playwrightChrono24Service = require('./services/playwrightChrono24Service');

async function testPlaywrightValuation() {
  console.log('üé≠ Testing Playwright Chrono24 Service...');
  console.log('üîç This should have much better anti-bot evasion than Puppeteer');

  // Test with the Omega Speedmaster Racing reference number
  const refNumber = '326.30.40.50.06.001';

  try {
    console.log(`üìù Testing evaluation for: ${refNumber}`);

    const startTime = Date.now();
    const result = await playwrightChrono24Service.evaluateWatch(refNumber);
    const processingTime = ((Date.now() - startTime) / 1000).toFixed(2);

    console.log('\nüéâ ===== EVALUATION SUCCESS! =====');
    console.log('üìä Results:', JSON.stringify(result, null, 2));

    // Verify the calculation is correct (80% of min price)
    const expectedTarget = Math.round(result.minPrice * 0.8);
    const calculationCorrect = result.targetPrice === expectedTarget;

    console.log(`\nüîç Calculation Verification:`);
    console.log(`Min Price: $${result.minPrice.toLocaleString()}`);
    console.log(`Max Price: $${result.maxPrice.toLocaleString()}`);
    console.log(`Average Price: $${result.avgPrice.toLocaleString()}`);
    console.log(`Target Price (80%): $${result.targetPrice.toLocaleString()}`);
    console.log(`Expected: $${expectedTarget.toLocaleString()}`);
    console.log(`Calculation Correct: ${calculationCorrect ? '‚úÖ' : '‚ùå'}`);
    console.log(`Confidence Level: ${result.confidence}`);
    console.log(`Processing Time: ${processingTime}s`);

    console.log(`\nüìà Price Range Analysis:`);
    console.log(`Spread: ${result.priceRange.spreadPercentage}%`);
    console.log(`Range: $${result.priceRange.min.toLocaleString()} - $${result.priceRange.max.toLocaleString()}`);

    if (result.confidence === 'High') {
      console.log('üéØ HIGH CONFIDENCE - Great data quality!');
    } else if (result.confidence === 'Medium') {
      console.log('‚ö° MEDIUM CONFIDENCE - Good data available');
    } else {
      console.log('‚ö†Ô∏è LOW CONFIDENCE - Limited data points');
    }
  } catch (error) {
    console.error('\n‚ùå ===== TEST FAILED =====');
    console.error('Error:', error.message);
    console.error('Stack:', error.stack);

    console.log('\nüîç Common issues and solutions:');
    console.log('1. ‚ùå Elements not found ‚Üí Page structure changed or anti-bot detected');
    console.log('2. ‚ùå Timeout errors ‚Üí Network issues or site blocking');
    console.log('3. ‚ùå Navigation failures ‚Üí IP blocked or geographic restrictions');
    console.log('\nüí° Playwright advantages over Puppeteer:');
    console.log('‚úÖ Better stealth (no webdriver traces)');
    console.log('‚úÖ Real browser contexts (like incognito++)');
    console.log('‚úÖ Advanced device emulation');
    console.log('‚úÖ Built-in network interception');
    console.log('‚úÖ More human-like interactions');
  } finally {
    console.log('\nüßπ Cleaning up Playwright resources...');
    await playwrightChrono24Service.cleanup();
    console.log('‚úÖ Test completed');
  }
}

testPlaywrightValuation().catch(console.error);
